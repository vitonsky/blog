---
import { type BlogPost } from '../../utils/getPosts';
import BaseLayout from '../../components/BaseLayout/BaseLayout.astro';
import { getBlogPostLink } from '../../utils/links';
import PostInfo from './PostInfo.astro';
import RelatedPosts from './RelatedPosts.astro';

type Props = {
	post: BlogPost;
	related: BlogPost[];
};

const { related } = Astro.props;
const {
	readingTime,
	data: { title, description, date, tags },
} = Astro.props.post;
---

<BaseLayout meta={{ title, description }}>
	<body>
		<main>
			<article class="post">
				<div class="head">
					<h1>{title}</h1>

					<div class="meta">
						<PostInfo date={date} readingTime={readingTime} />
					</div>
				</div>

				<hr />

				<div class="body">
					<slot />
				</div>

				<hr />

				{
					tags && (
						<>
							<div class="body">
								<span>Tags: </span>
								{tags.map((tag, index) => (
									<>
										{index > 0 && ', '}
										{
											<a href={`/blog/tag/${tag}`} class="tag">
												{tag}
											</a>
										}
									</>
								))}
							</div>
						</>
					)
				}
			</article>

			{
				related.length > 0 && <RelatedPosts posts={related}/>
			}
		</main>
	</body>
</BaseLayout>

<style>
	.post {
		display: flex;
		flex-direction: column;
		gap: 1rem;
	}

	.head {
		display: flex;
		flex-direction: column;
		gap: 1rem;
	}

	.meta {
		font-size: 0.8em;
		color: #616768;
	}

	.tag {
		display: inline-flex;
		gap: 1px;
		align-items: center;
		vertical-align: bottom;

		&:before {
			content: '#';
		}
	}

	.body > p:first-child {
		margin-top: 0;
	}

	main {
		display: flex;
		flex-direction: column;
		gap: 3rem;
	}
</style>
