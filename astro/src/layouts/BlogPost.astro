---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { Icon } from 'astro-icon/components';
import BaseLayout from './BaseLayout.astro';

type Props = CollectionEntry<'blog'>['data'] & {
	readingTime: { minutes: number; words: number };
};

const { title, description, pubDate, updatedDate, heroImage, readingTime, tags } =
	Astro.props;
---

<BaseLayout meta={{ title, description }}>
	<body>
		<main>
			<article class="post">
				<div class="head">
					<h1>{title}</h1>

					<div class="meta">
						<span class="inline-container">
							<Icon name="fa6-solid:calendar" />
							<FormattedDate date={pubDate} />
						</span>

						<span class="inline-container">
							<Icon name="fa6-solid:stopwatch" />
							<span>
								{Math.round(readingTime.minutes)} minutes to read
							</span>
						</span>
					</div>
				</div>

				<hr />

				<div class="body">
					<slot />
				</div>

				{
					tags && (
						<>
							<hr />
							<div class="body">
								<span>Tags: </span>
								{tags.map((tag, index) => (
									<>
										{index > 0 && ", "} 
										{<a href={`/blog/tag/${tag}`} class="tag">
											<Icon name="fa6-solid:hashtag" />
											<span>{tag}</span>
										</a>}
									</>
								))}
							</div>
						</>
					)
				}
			</article>
		</main>
	</body>
</BaseLayout>

<style>
	.post {
		display: flex;
		flex-direction: column;
		gap: 1rem;
	}

	.head {
		display: flex;
		flex-direction: column;
		gap: 1rem;
	}

	.meta {
		display: flex;
		flex-direction: row;
		gap: 1rem;

		font-size: 0.9em;
		color: #626262;
	}

	.inline-container {
		display: inline-flex;
		gap: 0.5em;
		align-items: baseline;
	}

	.tag {
		display: inline-flex;
		gap: 0.2em;
		align-items: center;
		vertical-align: bottom;
	}

	.body > p:first-child {
		margin-top: 0;
	}
</style>
